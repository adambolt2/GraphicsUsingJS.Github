export function checkDependancy(packageName, dependancyName, dependancy) {
    try {
        if (THREE[dependancyName] === undefined) {
            THREE[dependancyName] = dependancy;
            return;
        }

        if (THREE[dependancyName] !== dependancy) {
            throw new Error(`${packageName}: ${dependancyName} is duplicated. Your bundle includes ${dependancyName} twice. Please repair your bundle.`);
        }
    } catch (error) {
        if (!error.message.match(/is duplicated/)) {
            console.warn(
                `${packageName}: Duplication check unavailable. ${error}`
            );
        } else {
            throw error;
        }
    }
}

export function checkThreeRevision(packageName, revision) {
    try {
        if (THREE.REVISION != revision) {
            throw new Error(`${packageName} depends on THREE revision ${revision}, but current revision is ${THREE.REVISION}.`)
        }
    } catch (error) {
        if (!error.message.match(/depends on THREE revision/)) {
            console.warn(
                `${packageName}: Revision check unavailable. ${error}`
            );
        } else {
            throw error;
        }
    }
}
