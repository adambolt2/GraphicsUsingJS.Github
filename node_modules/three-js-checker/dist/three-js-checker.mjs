function checkDependancy(packageName, dependancyName, dependancy) {
    let duplicationMessage = `${packageName}: ${dependancyName} is duplicated. Your bundle includes ${dependancyName} twice. Please repair your bundle.`;
    try {
        if (THREE[dependancyName] === undefined) {
            THREE[dependancyName] = dependancy;
            return;
        }

        if (THREE[dependancyName] !== dependancy) {
            throw duplicationMessage;
        }
    } catch (error) {
        if (error !== duplicationMessage) {
            console.warn(
                `${packageName}: Duplication check unavailable.` + error
            );
        } else {
            throw error;
        }
    }
}

function checkThreeRevision(packageName, revision) {
    if (THREE.REVISION != revision) {
        console.error(
            `${packageName} depends on THREE revision ${revision}, but current revision is ${THREE.REVISION}.`
        );
    }
}

export { checkDependancy, checkThreeRevision };
